# serializer version: 1
# name: test_migration_system_tables_serialize_cross_store[clickhouse]
  dict({
    'migration': dict({
      'description': 'Test system table serialization',
      'migration_id': 'test_serialization',
      'operation_ids': list([
        'reconcile_downstream',
      ]),
    }),
    'operation': dict({
      'expected_steps': list([
        'test_stores/downstream',
      ]),
      'feature_key': 'test_stores/downstream',
      'operation_id': 'reconcile_downstream',
      'operation_type': 'metaxy.migrations.ops.DataVersionReconciliation',
    }),
    'step': dict({
      'error': None,
      'feature_key': 'test_stores/downstream',
      'migration_id': 'test_serialization',
      'operation_id': 'reconcile_downstream',
      'rows_affected': 1,
    }),
  })
# ---
# name: test_migration_system_tables_serialize_cross_store[clickhouse].1
  dict({
    'row_count': 2,
    'rows': list([
      dict({
        'data_version': "{'default': '6865575771891373631'}",
        'feature_version': 'fd0daab32fce8549056ee84475e18d286ad86704fb90ec622faf29ee38c3d62e',
        'sample_uid': 1,
      }),
      dict({
        'data_version': "{'default': 'd1'}",
        'feature_version': 'fd0daab32fce8549056ee84475e18d286ad86704fb90ec622faf29ee38c3d62e',
        'sample_uid': 1,
      }),
    ]),
  })
# ---
# name: test_migration_system_tables_serialize_cross_store[duckdb]
  dict({
    'migration': dict({
      'description': 'Test system table serialization',
      'migration_id': 'test_serialization',
      'operation_ids': list([
        'reconcile_downstream',
      ]),
    }),
    'operation': dict({
      'expected_steps': list([
        'test_stores/downstream',
      ]),
      'feature_key': 'test_stores/downstream',
      'operation_id': 'reconcile_downstream',
      'operation_type': 'metaxy.migrations.ops.DataVersionReconciliation',
    }),
    'step': dict({
      'error': None,
      'feature_key': 'test_stores/downstream',
      'migration_id': 'test_serialization',
      'operation_id': 'reconcile_downstream',
      'rows_affected': 1,
    }),
  })
# ---
# name: test_migration_system_tables_serialize_cross_store[duckdb].1
  dict({
    'row_count': 2,
    'rows': list([
      dict({
        'data_version': "{'default': '6865575771891373631'}",
        'feature_version': 'fd0daab32fce8549056ee84475e18d286ad86704fb90ec622faf29ee38c3d62e',
        'sample_uid': 1,
      }),
      dict({
        'data_version': "{'default': 'd1'}",
        'feature_version': 'fd0daab32fce8549056ee84475e18d286ad86704fb90ec622faf29ee38c3d62e',
        'sample_uid': 1,
      }),
    ]),
  })
# ---
# name: test_migration_system_tables_serialize_cross_store[inmemory]
  dict({
    'migration': dict({
      'description': 'Test system table serialization',
      'migration_id': 'test_serialization',
      'operation_ids': list([
        'reconcile_downstream',
      ]),
    }),
    'operation': dict({
      'expected_steps': list([
        'test_stores/downstream',
      ]),
      'feature_key': 'test_stores/downstream',
      'operation_id': 'reconcile_downstream',
      'operation_type': 'metaxy.migrations.ops.DataVersionReconciliation',
    }),
    'step': dict({
      'error': None,
      'feature_key': 'test_stores/downstream',
      'migration_id': 'test_serialization',
      'operation_id': 'reconcile_downstream',
      'rows_affected': 1,
    }),
  })
# ---
# name: test_migration_system_tables_serialize_cross_store[inmemory].1
  dict({
    'row_count': 2,
    'rows': list([
      dict({
        'data_version': "{'default': '6865575771891373631'}",
        'feature_version': 'fd0daab32fce8549056ee84475e18d286ad86704fb90ec622faf29ee38c3d62e',
        'sample_uid': 1,
      }),
      dict({
        'data_version': "{'default': 'd1'}",
        'feature_version': 'fd0daab32fce8549056ee84475e18d286ad86704fb90ec622faf29ee38c3d62e',
        'sample_uid': 1,
      }),
    ]),
  })
# ---
# name: test_migration_system_tables_serialize_cross_store[sqlite]
  dict({
    'migration': dict({
      'description': 'Test system table serialization',
      'migration_id': 'test_serialization',
      'operation_ids': list([
        'reconcile_downstream',
      ]),
    }),
    'operation': dict({
      'expected_steps': list([
        'test_stores/downstream',
      ]),
      'feature_key': 'test_stores/downstream',
      'operation_id': 'reconcile_downstream',
      'operation_type': 'metaxy.migrations.ops.DataVersionReconciliation',
    }),
    'step': dict({
      'error': None,
      'feature_key': 'test_stores/downstream',
      'migration_id': 'test_serialization',
      'operation_id': 'reconcile_downstream',
      'rows_affected': 1,
    }),
  })
# ---
# name: test_migration_system_tables_serialize_cross_store[sqlite].1
  dict({
    'row_count': 2,
    'rows': list([
      dict({
        'data_version': "{'default': '5f748113fd60f0d964c320c298e759c2'}",
        'feature_version': 'fd0daab32fce8549056ee84475e18d286ad86704fb90ec622faf29ee38c3d62e',
        'sample_uid': 1,
      }),
      dict({
        'data_version': "{'default': 'd1'}",
        'feature_version': 'fd0daab32fce8549056ee84475e18d286ad86704fb90ec622faf29ee38c3d62e',
        'sample_uid': 1,
      }),
    ]),
  })
# ---
