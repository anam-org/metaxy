[project]
name = "metaxy"
version = "0.0.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Daniel Gafni", email = "danielgafni16@gmail.com" }
]
requires-python = ">=3.10"
dependencies = [
    "cyclopts==4.0.0b1",
    "narwhals>=2.9.0",
    "polars>=1.33.1",
    "polars-hash>=0.5.1",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.11.0",
    "pyyaml>=6.0.0",
    "tomli>=2.3.0",
]

[project.optional-dependencies]
ibis = [
    "pyarrow>=18.0.0",
    "ibis-framework>=11.0.0",
]

[project.scripts]
metaxy = "metaxy.cli.app:main"

[tool.pyrefly]
project-includes = ["src", "tests"]
# search-path = ["src"]
project-excludes = [
    "**/node_modules",
    "**/__pycache__",
    "**/*venv/**/*",
]

[build-system]
requires = ["uv_build>=0.8.14,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "ipython>=8.37.0",
    "duckdb>=1.4.1",
    "pyrefly>=0.34.0",
    "pytest>=8.4.2",
    "pytest-cases>=3.9.1",
    "ruff>=0.13.1",
    "syrupy>=5.0.0",
    "ibis-framework[duckdb,sqlite,clickhouse]>=11.0.0",
    "basedpyright>=1.32.1",
    "vulture>=2.14",
]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
extend-select = [
    "I",
    "TID252",
    "UP"
]

[tool.ruff.lint.flake8-tidy-imports]
# Ban certain modules from being imported at module level, instead requiring
# that they're imported lazily (e.g., within a function definition).
banned-module-level-imports = ["ibis", "duckdb"]

[tool.vulture]
exclude = [
    "src/metaxy/_testing.py",
    "src/metaxy/cli/",
    "examples/**/feature*.py",
]
min_confidence = 60
